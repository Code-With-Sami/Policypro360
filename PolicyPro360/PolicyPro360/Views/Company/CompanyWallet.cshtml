@model List<PolicyPro360.ViewModels.WalletTransactionViewModel>

@{
    ViewData["Title"] = "Company Wallet - PolicyPro360";
    Layout = "_CompanyLayout";
}

<style>
    .dataTables_paginate .paginate_button.page-item .page-link {
        border-radius: 5px !important;
        margin: 0 3px;
        border: 1px solid #ddd;
        color: #333;
        transition: all 0.2s ease-in-out;
    }
    .dataTables_paginate .paginate_button.active .page-link {
        background: linear-gradient(to right, #f5a526 0%, #171827 100%) !important;
        color: white !important;
    
        font-weight: bold;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transform: translateY(-2px);
    }
    .dataTables_paginate .paginate_button:not(.active) .page-link:hover {
        background-color: #f0f0f0;
        border-color: #aaa;
    }
    .dataTables_paginate .page-link:focus {
        box-shadow: none;
    }
    div.dt-button-info {
        position: fixed !important;
        top: 80% !important;
        left: 50% !important;
        transform: translate(-50%, -50%);
        background-color: #171827 !important;
        color: white !important;
        border: none;
        padding: 20px 30px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        text-align: center;
        width: auto !important;
        max-width: 90%;
        z-index: 9999;
        white-space: nowrap;
    }
    div.dt-button-info h2 {
        color: white !important;
    }
    .dt-buttons .btn {
        margin-left: 5px;
    }
    .kpi-card {
        border-radius: 12px;
        border: none;
        color: white;
        transition: all 0.3s ease;
    }
    .kpi-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    }
    .kpi-label {
        font-size: 0.9rem;
        font-weight: 500;
        opacity: 0.8;
    }
    .kpi-value {
        font-size: 2.2rem;
        font-weight: 700;
    }
    .kpi-icon-lg {
        font-size: 3rem;
        opacity: 0.3;
    }
    .kpi-change-badge {
        font-size: 0.8rem;
        font-weight: 600;
        padding: 4px 10px;
        border-radius: 20px;
    }
    .kpi-change-text {
        font-size: 0.85rem;
        opacity: 0.8;
    }
</style>

<main class="main-wrapper">
    <div class="main-content">
        <!-- Breadcrumb -->
        <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
            <div class="breadcrumb-title pe-3">Company Wallet</div>
            <div class="ps-3">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0 p-0">
                        <li class="breadcrumb-item">
                            <i class="bx bx-home-alt"></i>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Company Wallet</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Row 1: KPI Cards -->
        <div class="row mb-4">
            <!-- Total Earnings Card -->
            <div class="col-lg-4">
                <div class="card kpi-card btn-grd-primary h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="kpi-label mb-1">Total Earnings</p>
                                <h2 class="kpi-value text-white mb-0">
                                    PKR @((Model?.Where(x => x.CommissionEarned > 0).Sum(x => x.CommissionEarned) ?? 0).ToString("N2"))
                                </h2>
                            </div>
                            <div class="kpi-icon-lg">
                                <i class="material-icons-outlined fs-1 text-white">account_balance_wallet</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- This Month's Earnings Card -->
            <div class="col-lg-4">
                <div class="card kpi-card btn-grd-primary text-white h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="kpi-label mb-1">This Month's Earnings</p>
                                <h2 class="kpi-value text-white mb-0">
                                    PKR @((Model?.Where(x => x.Date.Month == DateTime.Now.Month && x.Date.Year == DateTime.Now.Year && x.CommissionEarned > 0).Sum(x => x.CommissionEarned) ?? 0).ToString("N2"))
                                </h2>
                            </div>
                            <div class="kpi-icon-lg">
                                <i class="material-icons-outlined fs-1 text-white">bar_chart</i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Wallet Balance Card -->
            <div class="col-lg-4">
                <div class="card kpi-card btn-grd-warning h-100">
                    <div class="card-body d-flex flex-column justify-content-between">
                        <div>
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="kpi-label mb-1">Wallet Balance</p>
                                    <h2 class="kpi-value text-white mb-0">
                                        PKR @((ViewBag.ActualBalance ?? 0).ToString("N2"))
                                    </h2>
                                </div>
                                <div class="kpi-icon-lg">
                                    <i class="material-icons-outlined fs-1 text-white">account_balance</i>
                                </div>
                            </div>
                        </div>
                        <div class="mt-3">
                            <button class="btn btn-light btn-sm w-100" data-bs-toggle="modal" data-bs-target="#withdrawModal" @(ViewBag.ActualBalance <= 0 ? "disabled" : "")>
                                <i class="bi bi-cash-stack me-2"></i>Withdraw Funds
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Row 2: Data Table -->
        <div class="card">
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
              
                <h5 class="card-title fw-semibold mb-4">Earnings Transaction History</h5>
                <div class="table-responsive">
                    <table id="walletTable" class="table table-striped table-bordered" style="width:100%">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Transaction ID</th>
                                <th>Policy Sold</th>
                                <th>Company</th>
                                <th>Premium</th>
                                <th>Earnings</th>
                                <th>Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                int count = 1;
                                foreach (var transaction in Model)
                                {
                                    <tr>
                                        <td>@count</td>
                                        <td>@transaction.TransactionId</td>
                                        <td>@(string.IsNullOrEmpty(transaction.PolicyName) || transaction.PolicyName == "-" ? "N/A" : transaction.PolicyName)</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@(string.IsNullOrEmpty(transaction.CompanyLogoUrl) ? "/admin/assets/images/logo-icon.png" : transaction.CompanyLogoUrl)" alt="Logo" width="35" height="35" class="rounded-circle me-2" />
                                                <span>@(string.IsNullOrEmpty(transaction.CompanyName) || transaction.CompanyName == "-" ? "N/A" : transaction.CompanyName)</span>
                                            </div>
                                        </td>
                                        <td>PKR @string.Format("{0:N2}", transaction.TotalPremium)</td>
                                        <td>
                                            @if (transaction.Status == "Credited")
                                            {
                                                <span class="fw-bold text-success">+PKR @string.Format("{0:N2}", transaction.CommissionEarned)</span>
                                            }
                                            else
                                            {
                                                <span class="fw-bold text-danger">-PKR @string.Format("{0:N2}", Math.Abs(transaction.CommissionEarned))</span>
                                            }
                                        </td>
                                        <td>@transaction.Date.ToString("dd MMM, yyyy")</td>
                                        <td>
                                            @if (transaction.Status == "Credited")
                                            {
                                                <span class="badge rounded-pill bg-success-subtle text-success">@transaction.Status</span>
                                            }
                                            else
                                            {
                                                <span class="badge rounded-pill bg-warning-subtle text-warning">@transaction.Status</span>
                                            }
                                        </td>
                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Withdraw Modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1" aria-labelledby="withdrawModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form asp-action="WithdrawFunds" method="post">
                <div class="modal-header bg-warning text-white">
                    <h5 class="modal-title" id="withdrawModalLabel">
                        <i class="bi bi-cash-stack me-2"></i>Withdraw Funds
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        <strong>Available Balance:</strong> PKR @ViewBag.ActualBalance.ToString("N2")
                    </div>

                    <div class="mb-3">
                        <label for="withdrawAmount" class="form-label fw-semibold">Withdrawal Amount (PKR)</label>
                        <div class="input-group">
                            <span class="input-group-text">PKR</span>
                            <input type="number" 
                                   class="form-control" 
                                   id="withdrawAmount" 
                                   name="withdrawAmount" 
                                   step="0.01" 
                                   min="0.01" 
                                   max="@ViewBag.ActualBalance" 
                                   required 
                                   placeholder="Enter amount to withdraw">
                        </div>
                        <div class="form-text">Maximum withdrawal: PKR @ViewBag.ActualBalance.ToString("N2")</div>
                    </div>

                    <div class="mb-3">
                        <label for="withdrawalReason" class="form-label fw-semibold">Withdrawal Reason (Optional)</label>
                        <textarea class="form-control" 
                                  id="withdrawalReason" 
                                  name="withdrawalReason" 
                                  rows="3" 
                                  placeholder="Enter reason for withdrawal (optional)"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="bankDetails" class="form-label fw-semibold">Bank Account Details</label>
                        <textarea class="form-control" 
                                  id="bankDetails" 
                                  name="bankDetails" 
                                  rows="3" 
                                  required 
                                  placeholder="Enter your bank account details for transfer"></textarea>
                        <div class="form-text">Please provide complete bank account information for fund transfer</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-cash-stack me-2"></i>Confirm Withdrawal
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/admin/assets/plugins/datatable/js/jquery.dataTables.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/dataTables.bootstrap5.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/dataTables.buttons.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/buttons.bootstrap5.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/jszip.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/pdfmake.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/vfs_fonts.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/buttons.html5.min.js"></script>
    <script src="~/admin/assets/plugins/datatable/js/buttons.print.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#walletTable').DataTable({
                dom: '<"row align-items-center mb-3"<"col-sm-12 col-md-6"lB><"col-sm-12 col-md-6 d-flex justify-content-end"f>>' +
                    '<"row mt-3"<"col-sm-12"tr>>' +
                    '<"row mt-3"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                lengthChange: true,
                order: [[6, "desc"]],
                buttons: [
                    { extend: 'copy', text: '<i class="bi bi-clipboard"></i> Copy', className: 'btn btn-outline-primary btn-sm mt-3' },
                    { extend: 'excel', text: '<i class="bi bi-file-earmark-excel"></i> Excel', className: 'btn btn-outline-success btn-sm mt-3' },
                    { extend: 'pdf', text: '<i class="bi bi-file-earmark-pdf"></i> PDF', className: 'btn btn-outline-danger btn-sm mt-3' },
                    { extend: 'print', text: '<i class="bi bi-printer"></i> Print', className: 'btn btn-outline-info btn-sm mt-3' }
                ],
                pagingType: "simple_numbers"
            });

            // Client-side validation for withdrawal amount
            $('#withdrawAmount').on('input', function() {
                var amount = parseFloat($(this).val());
                var maxAmount = parseFloat('@ViewBag.ActualBalance');
                
                if (amount > maxAmount) {
                    $(this).addClass('is-invalid');
                    $(this).next('.invalid-feedback').remove();
                    $(this).after('<div class="invalid-feedback">Amount cannot exceed available balance</div>');
                } else {
                    $(this).removeClass('is-invalid');
                    $(this).next('.invalid-feedback').remove();
                }
            });

            // Form validation before submit
            $('form').on('submit', function(e) {
                var amount = parseFloat($('#withdrawAmount').val());
                var maxAmount = parseFloat('@ViewBag.ActualBalance');
                
                if (amount > maxAmount) {
                    e.preventDefault();
                    alert('Withdrawal amount cannot exceed available balance.');
                    return false;
                }
            });
        });
    </script>
} 