@model PolicyPro360.Models.Policy

@{
    ViewData["Title"] = "Create A Home Insurance Policy";
    Layout = "_CompanyLayout";
}

<main class="main-wrapper">
    <div class="main-content">
        <!--breadcrumb-->
        <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
            <div class="breadcrumb-title pe-3">Home Insurance Policy Form</div>
            <div class="ps-3">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0 p-0">
                        <li class="breadcrumb-item">
                            <a href="javascript:;"><i class="bx bx-home-alt"></i></a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                            Add A Home Insurance Policy
                        </li>
                    </ol>
                </nav>
            </div>
            <div class="ms-auto">
                <div class="btn-group">
                    <a class="btn btn-grd-primary px-4 text-white" href="@Url.Action("Index", "CompanyPolicy", new { categoryId = @ViewBag.CategoryId })">
                        Show Home Insurance policies
                    </a>
                </div>
            </div>

        </div>
        <div class="container my-5">
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-xl-6">
                    <div class="card">
                        <div class="card-body p-4">
                            <h5 class="mb-4">Add A Home Insurance Policy</h5>

                            <form asp-controller="CompanyPolicy" asp-action="CreateHomePolicy" method="post" enctype="multipart/form-data" class="row g-3">

                                <!-- Policy Name -->
                                <div class="col-md-12">
                                    <label asp-for="Name" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="Name" class="form-control" placeholder="Enter policy name">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">person</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>

                                <!-- Policy Description -->
                                <div class="col-md-12">
                                    <label asp-for="Description" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="Description" class="form-control" placeholder="Enter policy description">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">description</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>

                                @* policy type id fetch from url *@
                                <input type="hidden" name="PolicyTypeId" value="@ViewBag.CategoryId" />


                                <!-- Policy SumInsured -->
                                <div class="col-md-12">
                                    <label asp-for="SumInsured" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="SumInsured" class="form-control" placeholder="Enter Sum Insured">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">shield</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="SumInsured" class="text-danger"></span>
                                </div>

                                <!-- Policy Premium Amount  -->
                                <div class="col-md-12">
                                    <label asp-for="Premium" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="Premium" class="form-control" placeholder="Enter Premium Amount">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">diamond</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="Premium" class="text-danger"></span>
                                </div>

                                <!-- Policy Tenure -->
                                <div class="col-md-12">
                                    <label asp-for="Tenure" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="Tenure" class="form-control" placeholder="Enter Policy Tenure">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">calendar_today</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="Tenure" class="text-danger"></span>
                                </div>

                                <!-- Policy TermsConditions -->
                                <div class="col-md-12">
                                    <label asp-for="TermsConditions" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="TermsConditions" class="form-control" placeholder="Enter Terms & Conditions">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">description</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="TermsConditions" class="text-danger"></span>
                                </div>

                                <!-- Policy Brochure Upload -->
                                <div class="col-md-12">
                                    <label class="form-label">Policy Brochure (Upload Image)</label>
                                    <div class="position-relative input-icon">
                                        <input type="file" name="BrochureFile" class="form-control" accept="image/*" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">upload_file</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="BrochureUrl" class="text-danger"></span>
                                </div>


                                <!-- Dynamic Attributes -->


                                <!-- Property Type -->
                                <div class="col-md-12">
                                    <label for="property_type" class="form-label">Property Type</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[0].Key" value="property_type" />
                                        <input type="text" name="Attributes[0].Value" class="form-control" id="property_type" placeholder="Property Type">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">category</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Coverage Type -->
                                <div class="col-md-12">
                                    <label for="coverage_type" class="form-label">Coverage Type</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[1].Key" value="coverage_type" />
                                        <input type="text" name="Attributes[1].Value" class="form-control" id="coverage_type" placeholder="Coverage Type">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">support</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Property Age -->
                                <div class="col-md-12">
                                    <label for="property_age" class="form-label">Property Age</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[2].Key" value="property_age" />
                                        <input type="number" name="Attributes[2].Value" class="form-control" id="property_age" placeholder="Property Age" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">calendar_today</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Construction Type-->
                                <div class="col-md-12">
                                    <label for="construction_type" class="form-label">Construction Type</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[3].Key" value="construction_type" />
                                        <input type="text" name="Attributes[3].Value" class="form-control" id="construction_type" placeholder="Construction Type" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">building</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Location Risk Level -->
                                <div class="col-md-12">
                                    <label for="location_risk" class="form-label">Location Risk Level</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[4].Key" value="location_risk" />
                                        <input type="text" name="Attributes[4].Value" class="form-control" id="location_risk" placeholder="Location Risk Level" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">pin</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Add-on Covers -->
                                <div class="col-md-12">
                                    <label for="add_on_covers" class="form-label">Add-on Covers</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[5].Key" value="add_on_covers" />
                                        <input type="text" name="Attributes[5].Value" class="form-control" id="add_on_covers" placeholder="Add-on Covers" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">category</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                               
                                <!-- exclusions -->
                                <div class="col-md-12">
                                    <label for="exclusions" class="form-label">Exclusions</label>
                                    <div class="position-relative input-icon">
                                        <input type="hidden" name="Attributes[6].Key" value="exclusions" />
                                        <input type="text" name="Attributes[6].Value" class="form-control" id="exclusions" placeholder="Exclusions" />
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">stars</i>
                                        </span>
                                    </div>
                                    <span class="text-danger"></span>
                                </div>

                                <!-- Category Status -->
                                <div class="col-md-12">
                                    <label asp-for="Active" class="form-label"></label>
                                    <div class="form-check">
                                        <input asp-for="Active" class="form-check-input" type="checkbox" />
                                        <label class="form-check-label" for="Active">Yes</label>
                                    </div>
                                    <span asp-validation-for="Active" class="text-danger"></span>
                                </div>

                                <!-- Submit and Reset Buttons -->
                                <div class="col-md-12">
                                    <div class="d-md-flex d-grid align-items-center gap-3">
                                        <button type="submit" class="btn btn-grd-primary px-4 text-white">Submit</button>
                                        <button type="reset" class="btn btn-grd-royal px-4 text-white">Reset</button>
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector('form');
            if (!form) return;

            function showError(input, message) {
                const errorSpan = input.parentElement.querySelector('.text-danger');
                if (errorSpan) errorSpan.textContent = message;
            }

            function clearError(input) {
                const errorSpan = input.parentElement.querySelector('.text-danger');
                if (errorSpan) errorSpan.textContent = '';
            }

            function isAlpha(value) {
                return /^[a-zA-Z\s]+$/.test(value);
            }

            function isNumeric(value) {
                return /^\d+(\.\d+)?$/.test(value);
            }

            function isValidFile(fileInput) {
                if (!fileInput.files.length) return false;
                const file = fileInput.files[0];
                return /\.(jpg|jpeg|png|webp)$/i.test(file.name);
            }

            form.addEventListener('submit', function (e) {
                let isValid = true;

                const name = form.querySelector('input[name="Name"]');
                if (!name.value.trim() || !isAlpha(name.value.trim())) {
                    showError(name, "Policy name is required and must contain letters only.");
                    isValid = false;
                } else {
                    clearError(name);
                }

                const desc = form.querySelector('input[name="Description"]');
                if (!desc.value.trim() || desc.value.trim().length < 10) {
                    showError(desc, "Description must be at least 10 characters long.");
                    isValid = false;
                } else {
                    clearError(desc);
                }

                const sumInsured = form.querySelector('input[name="SumInsured"]');
                if (!sumInsured.value.trim() || !isNumeric(sumInsured.value.trim()) || parseFloat(sumInsured.value) <= 0) {
                    showError(sumInsured, "Sum Insured must be a positive number.");
                    isValid = false;
                } else {
                    clearError(sumInsured);
                }

                const premium = form.querySelector('input[name="Premium"]');
                if (!premium.value.trim() || !isNumeric(premium.value.trim()) || parseFloat(premium.value) <= 0) {
                    showError(premium, "Premium amount must be a positive number.");
                    isValid = false;
                } else {
                    clearError(premium);
                }

                const tenure = form.querySelector('input[name="Tenure"]');
                if (!tenure.value.trim() || !isNumeric(tenure.value.trim()) || parseFloat(tenure.value) <= 0) {
                    showError(tenure, "Tenure must be a positive number.");
                    isValid = false;
                } else {
                    clearError(tenure);
                }

                const terms = form.querySelector('input[name="TermsConditions"]');
                if (!terms.value.trim()) {
                    showError(terms, "Terms & Conditions are required.");
                    isValid = false;
                } else {
                    clearError(terms);
                }

                const brochure = form.querySelector('input[name="BrochureFile"]');
                if (!isValidFile(brochure)) {
                    showError(brochure, "Please upload a valid image file (.jpg, .png, .webp).");
                    isValid = false;
                } else {
                    clearError(brochure);
                }

                // Validate Attributes
                for (let i = 0; i <= 6; i++) {
                    const attrInput = form.querySelector(`input[name="Attributes[${i}].Value"]`);
                    if (!attrInput.value.trim()) {
                        showError(attrInput, "This field is required.");
                        isValid = false;
                    } else {
                        if (i === 2) { // Property Age should be numeric
                            if (!isNumeric(attrInput.value.trim()) || parseFloat(attrInput.value) <= 0) {
                                showError(attrInput, "Must be a positive number.");
                                isValid = false;
                            } else {
                                clearError(attrInput);
                            }
                        } else {
                            clearError(attrInput);
                        }
                    }
                }

                if (!isValid) e.preventDefault();
            });

            // Live character-only restriction for Name
            form.querySelector('input[name="Name"]').addEventListener('input', function () {
                this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
            });

            // Live numeric-only restriction
            ['SumInsured', 'Premium', 'Tenure'].forEach(field => {
                const input = form.querySelector(`input[name="${field}"]`);
                input.addEventListener('input', function () {
                    this.value = this.value.replace(/[^0-9.]/g, '');
                });
            });

            // Live numeric restriction for Property Age
            const propertyAgeInput = form.querySelector('#property_age');
            propertyAgeInput.addEventListener('input', function () {
                this.value = this.value.replace(/[^0-9]/g, '');
            });

        });
    </script>

}



