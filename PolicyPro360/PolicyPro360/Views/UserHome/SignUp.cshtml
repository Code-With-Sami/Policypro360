@model PolicyPro360.Models.Users
@{
    ViewData["Title"] = "Sign Up - PolicyPro360";
    Layout = "_UserLayout";
}

<style>
    .sign-in__form-input-box input[type = text],
    .sign-in__form-input-box input[type = number],
    .sign-in__form-input-box input[type = file],
    .sign-in__form-input-box input[type = date],
    .sign-in__form-input-box textarea{
        height: 60px;
        width: 100%;
        border: none;
        background-color: var(--insur-extra);
        padding-left: 30px;
        padding-right: 30px;
        border-radius: var(--insur-bdr-radius);
        outline: none;
        font-size: 14px;
        color: var(--insur-gray);
        display: block;
        font-weight: 500;
        letter-spacing: var(--insur-letter-spacing);
    }

    .custom-checkbox-wrapper {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 20px;
    }

    /* Hide default checkbox */
    .custom-checkbox {
        -webkit-appearance: none;
        appearance: none;
        width: 18px;
        height: 18px;
        border: 2px solid #ccc;
        border-radius: 2px;
        background-color: #fff;
        position: relative;
        cursor: pointer;
    }

        /* Custom checkmark */
        .custom-checkbox::after {
            content: "";
            position: absolute;
            top: 1px;
            left: 5px;
            width: 4px;
            height: 9px;
            border: solid #f5a526;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
            opacity: 0;
            transition: opacity 0.2s ease-in-out;
        }

        /* Show when checked */
        .custom-checkbox:checked::after {
            opacity: 1;
        }
    .create {
        color: #f5a526;
    }

    .create:hover {
            color: #171827;
     }


</style>

<!--Page Header Start-->
<section class="page-header">
    <div class="page-header-bg" style="background-image: url('@Url.Content("~/user/assets/images/backgrounds/loan-policy-bg.jpg")')">
    </div>
    <div class="page-header-shape-1"><img src="~/user/assets/images/shapes/page-header-shape-1.png" alt=""></div>
    <div class="container">
        <div class="page-header__inner">
            <ul class="thm-breadcrumb list-unstyled">
                <li><a href="index.html">Home</a></li>
                <li><span>/</span></li>
                <li>Register</li>
            </ul>
            <h2>Register</h2>
        </div>
    </div>
</section>
<!--Page Header End-->
<!--Sign Up Start -->
<section class="sign-in">
    <div class="container">
        <!-- Using justify-content-center to center the card -->
        <div class="row justify-content-center">
            <!-- Using narrower columns like the login page -->
            <div class="col-xl-8 col-lg-10">
                <div class="sign-in__single">
                    <h3 class="sign-in__title">Register</h3>
                    <form asp-controller="UserHome" asp-action="SignUp" method="post" enctype="multipart/form-data" class="sign-in__form">
                     
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                @TempData["SuccessMessage"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }

                        @if (ViewBag.ImagePath != null)
                        {
                            <div class="alert alert-info">
                                Image Path: @ViewBag.ImagePath
                            </div>
                        }

                        <!-- All fields are now in a single vertical column -->
                        <!-- Name -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="Name" type="text" placeholder="Enter your name">
                        </div>
                        <span asp-validation-for="Name" class="text-danger d-block mb-3"></span>

                        <!-- Username -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="Username" type="text" placeholder="Enter your Username">
                        </div>
                        <span asp-validation-for="Username" class="text-danger d-block mb-3"></span>

                        <!-- Mobile Number -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="MobileNumber" type="number" placeholder="Enter your number">
                        </div>
                        <span asp-validation-for="MobileNumber" class="text-danger d-block mb-3"></span>

                        <!-- Email -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="Email" type="email" placeholder="Enter your email address">
                        </div>
                        <span asp-validation-for="Email" class="text-danger d-block mb-3"></span>

                        <!-- Password -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="Password" type="password" placeholder="Enter password">
                        </div>
                        <span asp-validation-for="Password" class="text-danger d-block mb-3"></span>

                        <!-- Confirm Password -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="ConfirmPassword" type="password" placeholder="Confirm your password">
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger d-block mb-3"></span>

                        <!-- Date of Birth -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="DateOfBirth" type="date" placeholder="Date Of Birth">
                        </div>
                        <span asp-validation-for="DateOfBirth" class="text-danger d-block mb-3"></span>

                        <!-- Profile Image -->
                        <div class="sign-in__form-input-box">
                            <input asp-for="ProfileImage" type="file" class="form-control-lg" id="formFile" placeholder="Upload Image" style="border: none;">
                        </div>
                        <span asp-validation-for="ProfileImage" class="text-danger d-block mb-3"></span>

                        <!-- Address -->
                        <div class="sign-in__form-input-box">
                            <textarea asp-for="Address" placeholder="Enter your address"></textarea>
                        </div>
                        <span asp-validation-for="Address" class="text-danger d-block mb-3"></span>

                        <div class="custom-checkbox-wrapper">
                            <input type="checkbox" id="policyCheck" class="custom-checkbox" checked>
                            <label for="policyCheck">I accept company privacy policy.</label>
                        </div>

                        <div class="sign-in__form-btn-box mt-5 d-grid">
                            <button type="submit" class="thm-btn sign-in__form-btn">Register</button>
                        </div>

                        <!-- Login Link -->
                        <div class="text-center mt-4">
                            <span class="text-muted">Already have an account?</span>
                            <a class="create" href="@Url.Action("SignIn","UserHome")">Login Now</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<!--Sign Up End-->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector('form');
        const nameInput = form.querySelector('input[name="Name"]');
        const usernameInput = form.querySelector('input[name="Username"]');
        const mobileInput = form.querySelector('input[name="MobileNumber"]');
        const emailInput = form.querySelector('input[name="Email"]');
        const passwordInput = form.querySelector('input[name="Password"]');
        const confirmPasswordInput = form.querySelector('input[name="ConfirmPassword"]');
        const dobInput = form.querySelector('input[name="DateOfBirth"]');
        const profileImageInput = form.querySelector('input[name="ProfileImage"]');
        const addressInput = form.querySelector('textarea[name="Address"]');

        function showError(input, message) {
            let errorSpan = input.nextElementSibling;
            if (errorSpan && errorSpan.classList.contains('text-danger')) {
                errorSpan.innerText = message;
            }
        }

        function clearError(input) {
            let errorSpan = input.nextElementSibling;
            if (errorSpan && errorSpan.classList.contains('text-danger')) {
                errorSpan.innerText = '';
            }
        }

        function isAlpha(value) {
            return /^[a-zA-Z\s]+$/.test(value);
        }

        form.addEventListener('submit', function (e) {
            let isValid = true;

            // Name Validation
            if (!nameInput.value.trim() || !isAlpha(nameInput.value.trim())) {
                showError(nameInput, "Name is required and must contain only letters.");
                isValid = false;
            } else {
                clearError(nameInput);
            }

            // Username Validation
            if (!usernameInput.value.trim() || !isAlpha(usernameInput.value.trim())) {
                showError(usernameInput, "Username is required and must contain only letters.");
                isValid = false;
            } else {
                clearError(usernameInput);
            }

            // Mobile Validation
            if (!mobileInput.value.trim()) {
                showError(mobileInput, "Mobile number is required.");
                isValid = false;
            } else {
                clearError(mobileInput);
            }

            // Email Validation
            if (!emailInput.value.trim()) {
                showError(emailInput, "Email is required.");
                isValid = false;
            } else {
                clearError(emailInput);
            }

            // Password Validation
            if (!passwordInput.value.trim()) {
                showError(passwordInput, "Password is required.");
                isValid = false;
            } else {
                clearError(passwordInput);
            }

            // Confirm Password Match
            if (confirmPasswordInput.value.trim() !== passwordInput.value.trim()) {
                showError(confirmPasswordInput, "Passwords do not match.");
                isValid = false;
            } else {
                clearError(confirmPasswordInput);
            }

            // DOB Validation
            if (!dobInput.value.trim()) {
                showError(dobInput, "Date of Birth is required.");
                isValid = false;
            } else {
                clearError(dobInput);
            }

            // Profile Image Validation
            if (!profileImageInput.value.trim()) {
                showError(profileImageInput, "Profile image is required.");
                isValid = false;
            } else {
                clearError(profileImageInput);
            }

            // Address Validation
            if (!addressInput.value.trim()) {
                showError(addressInput, "Address is required.");
                isValid = false;
            } else {
                clearError(addressInput);
            }

            if (!isValid) {
                e.preventDefault(); // Stop form submission
            }
        });

        // Optional: Restrict typing numbers in Name and Username fields
        nameInput.addEventListener('input', function () {
            this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
        });

        usernameInput.addEventListener('input', function () {
            this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
        });
    });
</script>
