@model PolicyPro360.Models.Category
@{
    ViewData["Title"] = "Create a Policy Category";
    Layout = "_Layout";
}

<main class="main-wrapper">
    <div class="main-content">
        <!--breadcrumb-->
        <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
            <div class="breadcrumb-title pe-3">Policy Category Form</div>
            <div class="ps-3">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0 p-0">
                        <li class="breadcrumb-item">
                            <a href="javascript:;"><i class="bx bx-home-alt"></i></a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                            Add a Policy Category
                        </li>
                    </ol>
                </nav>
            </div>
            <div class="ms-auto">
                <div class="btn-group">
                    <a class="btn btn-grd-primary px-4 text-white" href="@Url.Action("Index", "AdminUsers")">
                        Show Policy Categories
                    </a>
                </div>
            </div>

        </div>
        <div class="container my-5">
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-xl-6">
                    <div class="card">
                        <div class="card-body p-4">
                            <h5 class="mb-4">Add a Category</h5>

                            <form asp-controller="PolicyCategory" asp-action="Create" method="post" class="row g-3">

                                

                                @if (TempData["SuccessMessage"] != null)
                                {
                                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                                        @TempData["SuccessMessage"]
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                }

                                @if (ViewBag.ImagePath != null)
                                {
                                    <div class="alert alert-info">
                                        Image Path: @ViewBag.ImagePath
                                    </div>
                                }

                                <!-- Category Name -->
                                <div class="col-md-12">
                                    <label asp-for="Name" class="form-label"></label>
                                    <div class="position-relative input-icon">
                                        <input asp-for="Name" class="form-control" placeholder="Enter category name">
                                        <span class="position-absolute top-50 translate-middle-y">
                                            <i class="material-icons-outlined fs-5">category</i>
                                        </span>
                                    </div>
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>

                                <!-- Category Description --> 
                                 <div class="col-md-12"> 
                                    <label asp-for="Description" class="form-label"></label> 
                                    <div class="position-relative input-icon"> 
                                        <input asp-for="Description" class="form-control" placeholder="Enter category description"> 
                                        <span class="position-absolute top-50 translate-middle-y"> 
                                            <i class="material-icons-outlined fs-5">description</i> 
                                      </span> 
                                     </div>
                                   <span asp-validation-for="Description" class="text-danger"></span> 
                                 </div>
                                <!-- Category Status -->
                                <div class="col-md-12">
                                    <label asp-for="Status" class="form-label"></label>
                                    <div class="form-check">
                                        <input asp-for="Status" class="form-check-input" type="checkbox" />
                                        <label class="form-check-label" for="Status">Active</label>
                                    </div>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                               
                                <!-- Submit and Reset Buttons -->
                                <div class="col-md-12">
                                    <div class="d-md-flex d-grid align-items-center gap-3">
                                        <button type="submit" class="btn btn-grd-primary px-4 text-white">Submit</button>
                                        <button type="reset" class="btn btn-grd-royal px-4 text-white">Reset</button>
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.querySelector('form');

            if (!form) return;

            function showError(input, message) {
                var errorSpan = input.parentElement.querySelector('.text-danger');
                if (errorSpan) {
                    errorSpan.textContent = message;
                }
            }

            function clearError(input) {
                var errorSpan = input.parentElement.querySelector('.text-danger');
                if (errorSpan) {
                    errorSpan.textContent = '';
                }
            }

            function isAlpha(value) {
                return /^[a-zA-Z\s]+$/.test(value);
            }

            form.addEventListener('submit', function (e) {
                let isValid = true;

                var name = form.querySelector('input[name="Name"]');
                if (!name.value.trim() || !isAlpha(name.value.trim())) {
                    showError(name, "Category name is required and should contain only letters.");
                    isValid = false;
                } else {
                    clearError(name);
                }

                var description = form.querySelector('input[name="Description"]');
                if (!description.value.trim() || description.value.trim().length < 5) {
                    showError(description, "Description is required (min 5 characters).");
                    isValid = false;
                } else {
                    clearError(description);
                }

                // You can add Status validation if required
                if (!isValid) e.preventDefault();
            });

            // Real-time validation for Name (letters only)
            var nameInput = form.querySelector('input[name="Name"]');
            nameInput.addEventListener('input', function () {
                this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
            });
        });
    </script>
}
